name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
  schedule:
    - cron: '0 14 * * SUN'

jobs:
  test_suite:
    name: Pytest on ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.7', '3.8', '3.9', '3.10']
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0}
    env:
      MPLBACKEND: "Agg"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow
      - uses: pyviz-dev/holoviz_tasks/install@master
        with:
          name: test_suite
          python_version: ${{ matrix.python-version}
          channels: pyviz/label/dev,bokeh,conda-forge,nodefaults
          envs: "-o flakes -o tests -o examples_tests"
          cache: true
        id: install
      - name: doit test_flakes
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_flakes
      - name: doit test_unit
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_unit
      - name: test examples
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_examples
      - name: codecov
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          codecov
