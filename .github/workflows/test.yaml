name: tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
  schedule:
    - cron: '0 14 * * SUN'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  SETUPTOOLS_ENABLE_FEATURES: "legacy-editable"
  DISPLAY: ":99.0"
  PYTHONIOENCODING: "utf-8"
  MPLBACKEND: "Agg"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  OMP_NUM_THREADS: 1
  OPENBLAS_NUM_THREADS: 1
  MKL_NUM_THREADS: 1
  VECLIB_MAXIMUM_THREADS: 1
  NUMEXPR_NUM_THREADS: 1
  NUMBA_NUM_THREADS: 1
  PYDEVD_DISABLE_FILE_VALIDATION: 1

jobs:
  pre_commit:
    name: Run pre-commit
    runs-on: 'ubuntu-latest'
    steps:
      - uses: holoviz-dev/holoviz_tasks/pre-commit@v0.1a17

  unit_test_suite:
    name: Unit tests on Python ${{ matrix.python-version }}, ${{ matrix.os }}
    needs: [pre_commit]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.8', '3.11']
        include:
          - os: 'ubuntu-latest'
            python-version: '3.9'
          - os: 'ubuntu-latest'
            python-version: '3.10'
    timeout-minutes: 120
    defaults:
      run:
        shell: bash -el {0}
    env:
      DESC: "Python ${{ matrix.python-version }}, ${{ matrix.os }} unit tests"
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
      - uses: holoviz-dev/holoviz_tasks/install@v0.1a17
        with:
          name: unit_test_suite
          python-version: ${{ matrix.python-version }}
          channel-priority: strict
          channels: pyviz/label/dev,conda-forge,nodefaults
          envs: "-o flakes -o tests -o examples_tests"
          cache: true
          conda-update: true
        id: install
      - name: bokeh sampledata
        run: |
          conda activate test-environment
          bokeh sampledata
      - name: doit test_unit
        run: |
          conda activate test-environment
          doit test_unit
      - name: test examples
        run: |
          conda activate test-environment
          doit test_examples
      - name: codecov
        run: |
          conda activate test-environment
          codecov
  ui_test_suite:
    name: UI tests on Python ${{ matrix.python-version }}, ${{ matrix.os }}
    needs: [pre_commit]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.9']
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -el {0}
    env:
      DESC: "Python ${{ matrix.python-version }}, ${{ matrix.os }} UI tests"
      PANEL_LOG_LEVEL: info
      # Without this env var `doit env_create ...` uses by default
      # the `pyviz` channel, except that we don't want to configure
      # it as one of the sources.
      PYCTDEV_SELF_CHANNEL: "pyviz/label/dev"
    steps:
      - uses: holoviz-dev/holoviz_tasks/install@v0.1a17
        with:
          name: ui_test_suite
          python-version: ${{ matrix.python-version }}
          channels: pyviz/label/dev,bokeh,conda-forge,nodefaults
          envs: "-o recommended -o tests -o build"
          cache: true
          playwright: true
        id: install
      - name: doit env_capture
        run: |
          conda activate test-environment
          doit env_capture
      - name: doit test_ui
        run: |
          conda activate test-environment
          doit test_ui
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: ui-tests
          fail_ci_if_error: false # optional (default = false)
  core_test_suite:
    name: Core tests on Python ${{ matrix.python-version }}, ${{ matrix.os }}
    needs: [pre_commit]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.11']
    timeout-minutes: 120
    defaults:
      run:
        shell: bash -el {0}
    env:
      DESC: "Python ${{ matrix.python-version }}, ${{ matrix.os }} core tests"
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
      - uses: holoviz-dev/holoviz_tasks/install@v0.1a17
        with:
          name: core_test_suite
          python-version: ${{ matrix.python-version }}
          channel-priority: strict
          channels: pyviz/label/dev,conda-forge,nodefaults
          envs: "-o tests_core"
          cache: true
          conda-update: true
        id: install
      - name: bokeh sampledata
        run: |
          conda activate test-environment
          bokeh sampledata
      - name: Check packages latest version
        run: |
          conda activate test-environment
          python scripts/check_latest_packages.py
      - name: doit test_unit
        run: |
          conda activate test-environment
          pytest holoviews
