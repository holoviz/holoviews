name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
  schedule:
    - cron: '0 14 * * SUN'

jobs:
  pre_commit:
    name: Run pre-commit hooks
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "1"
      - name: set PY
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: pre-commit
        uses: pre-commit/action@v2.0.3
  test_suite:
    name: Pytest on ${{ matrix.python-version }}, ${{ matrix.os }}
    needs: [pre_commit]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-latest']
        # os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.8']
        # python-version: ['3.7', '3.8', '3.9', '3.10']
    timeout-minutes: 90
    defaults:
      run:
        shell: bash -l {0}
    env:
      HV_REQUIREMENTS: "-o flakes -o tests -o examples_tests"
      MPLBACKEND: "Agg"
      CHANS_DEV: "-c pyviz/label/dev -c bokeh/label/dev -c conda-forge -c nodefaults"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "100"
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow
      - name: conda setup
        run: |
          eval "$(conda shell.bash hook)"
          conda update -n base -c defaults conda
          conda config --prepend channels nodefaults
          conda config --prepend channels conda-forge
          conda config --prepend channels bokeh/label/dev
          conda config --prepend channels pyviz/label/dev
          conda config --remove channels defaults
          conda create -n test-environment python=${{ matrix.python-version }} pyctdev
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: doit develop_install
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda list
          conda install -y  "param >=1.7.0" "pyct >=0.4.4" "setuptools >=30.3.0"
          conda install -y --no-update-deps "param >=1.9.3,<2.0" "numpy >=1.0" "pyviz_comms >=0.7.4" "panel >=0.13.1" "colorcet" "packaging" "pandas >=0.20.0" "flake8" "pre-commit" "pytest" "pytest-cov" "matplotlib >=3" "nbconvert" "bokeh" "pillow" "plotly >=4.0" "dash >=1.16" "codecov" "dask" "ibis-sqlite" "spatialpandas" "xarray >=0.10.4" "networkx" "datashader >=0.11.1" "shapely" "ffmpeg" "cftime" "scipy" "selenium" "ipython >=5.4.0" "ipython >=5.4.0" "notebook" "matplotlib >=3" "bokeh >=2.4.3" "networkx" "pillow" "xarray >=0.10.4" "plotly >=4.0" "dash >=1.16" "streamz >=0.5.0" "datashader >=0.11.1" "ffmpeg" "cftime" "netcdf4" "dask" "scipy" "shapely" "scikit-image" "pyarrow" "nbsmoke >=0.2.0"
          # doit develop_install ${{ env.HV_REQUIREMENTS }}
          python -c "from param import version; print(version.Version.setup_version('.', 'holoviews', archive_commit='$Format:%h$'))"
          echo "-----"
          git describe
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: doit test_flakes
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_flakes
      - name: doit test_unit
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_unit
      - name: test examples
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_examples
      - name: codecov
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          codecov
