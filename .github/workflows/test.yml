name: pytest
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  test_suite:
    name: Pytest on ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0}
    env:
      DESC: "Python ${{ matrix.python-version }} tests"
      HV_REQUIREMENTS: "-o unit_tests"
      PYTHON_VERSION: ${{ matrix.python-version }}
      MPLBACKEND: "Agg"
      CHANS_DEV: "-c pyviz/label/dev -c bokeh -c conda-forge -c nodefaults"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow
      - name: conda setup 3.6
        if: matrix.python-version == '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda create -c pyviz/label/dev -c bokeh -n test-environment python=${{ matrix.python-version }} pyctdev
      - name: conda setup > 3.6
        if: matrix.python-version != '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda update -n base -c defaults conda
          conda config --prepend channels nodefaults
          conda config --prepend channels conda-forge
          conda config --prepend channels bokeh
          conda config --prepend channels pyviz/label/dev
          conda config --remove channels defaults
          conda create -n test-environment python=${{ matrix.python-version }} pyctdev
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: doit develop_install 3.6
        if: matrix.python-version == '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda list
          doit develop_install -c pyviz/label/dev -c bokeh ${{ env.HV_REQUIREMENTS }}
          # Pin panel on Python 3.6 because one or more dev releases on the 0.13.* series
          # can be installed on Python 3.6 but are actually not compatible with Python 3.6
          # Install ibis-framework instead of ibis-sqlite as it's only available starting from Python 3.7
          conda install -c pyviz/label/dev -c bokeh ibis-framework "panel=0.12"
          python -c "from param import version; print(version.Version.setup_version('.', 'holoviews', archive_commit='$Format:%h$'))"
          echo "-----"
          git describe
      - name: doit develop_install > 3.6
        if: matrix.python-version != '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda list
          doit develop_install ${{ env.HV_REQUIREMENTS }}
          conda install ibis-sqlite
          python -c "from param import version; print(version.Version.setup_version('.', 'holoviews', archive_commit='$Format:%h$'))"
          echo "-----"
          git describe
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: doit test_flakes
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_flakes
      - name: doit test_unit
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_unit
      - name: test examples
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_examples
      - name: codecov
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          codecov
