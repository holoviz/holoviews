[project]
name = "holoviews"
channels = ["conda-forge", "pyviz/label/dev"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tasks]
check-latest-packages = 'python scripts/check_latest_packages.py'
download-data = 'python scripts/download_data.py'
install = 'python -m pip install --no-deps --disable-pip-version-check -e .'

[environments]
test-39 = ["py39", "test-core", "test", "example", "test-example", "test-unit-task"]
test-310 = ["py310", "test-core", "test", "example", "test-example", "test-unit-task"]
test-311 = ["py311", "test-core", "test", "example", "test-example", "test-unit-task"]
test-312 = ["py312", "test-core", "test", "example", "test-example", "test-unit-task"]
test-ui = ["py312", "test-core", "test", "test-ui"]
test-core = ["py312", "test-core", "test-unit-task"]
docs = ["py311", "example", "doc"]
build = ["py311", "build"]
lint = ["py311", "lint"]

[dependencies]
python = ">=3.9"
pip= "*"
param = ">=1.12.0,<3.0"
panel = ">=1.0"
pyviz_comms = ">=2.1"
colorcet = "*"
numpy = ">=1.0"
packaging = "*"
pandas = ">=0.20.0"
# Recommended
ipython = ">=5.4.0"
notebook = "*"
matplotlib-base = ">=3"
bokeh = ">=3.1"

[feature.py39.dependencies]
python = "3.9.*"

[feature.py310.dependencies]
python = "3.10.*"

[feature.py311.dependencies]
python = "3.11.*"

[feature.py312.dependencies]
python = "3.12.*"

[feature.example.dependencies]
networkx = "*"
pillow = "*"
xarray = ">=0.10.4"
plotly = ">=4.0"
# dash >=1.16
streamz = ">=0.5.0"
ffmpeg = "*"
cftime = "*"
netcdf4 = "*"
dask-core = "*"
scipy = "*"
shapely = "*"
scikit-image = "*"
pyarrow = "*"
pooch = "*"
datashader = ">=0.11.1"
notebook = ">=7.0"

# =============================================
# =================== TESTS ===================
# =============================================
[feature.test-core.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-github-actions-annotate-failures = "*"
pytest-rerunfailures = "*"
nbconvert = "*"
pillow = "*"
plotly = ">=4.0"
contourpy = "*"

[feature.test-unit-task.tasks]
test-unit = 'pytest holoviews'  # So it not showing up for UI tests

[feature.test.dependencies]
dask-core = "*"
ibis-sqlite = "*"
xarray = ">=0.10.4"
networkx = "*"
shapely = "*"
ffmpeg = "*"
cftime = "*"
scipy = ">=1.10" # Python 3.9 + Windows downloads 1.9
selenium = "*"
spatialpandas = "*"
datashader = ">=0.11.1"
xyzservices = "*"
# dash >=1.16

[feature.test.target.unix.dependencies]
tsdownsample = "*"  # currently not available on Windows

[feature.test-example.tasks]
test-example = 'pytest -n auto --dist loadscope --nbval-lax examples'

[feature.test-example.dependencies]
nbval = "*"
pytest-xdist = "*"

[feature.test-ui]
channels = ["conda-forge", "pyviz/label/dev", "microsoft"]

[feature.test-ui.dependencies]
playwright = "*"
pytest-playwright = "*"

[feature.test-ui.tasks]
install-ui = 'playwright install chromium'

[feature.test-ui.tasks.test-ui]
cmd = 'pytest holoviews/tests/ui --ui --browser chromium'
depends_on = ["install-ui"]

# =============================================
# =================== DOCS ====================
# =============================================
[feature.doc.dependencies]
nbsite = ">=0.8.4,<0.9.0"
graphviz = "*"
pooch = "*"
selenium = "*"

[feature.doc.tasks]
docs-generate-rst = 'nbsite generate-rst --org holoviz --project-name holoviews'
docs-refmanual = 'python ./doc/generate_modules.py holoviews -d ./doc/reference_manual -n holoviews -e tests'
docs-generate = 'nbsite build --what=html --output=builtdocs --org holoviz --project-name holoviews'

[feature.doc.tasks.docs-build]
depends_on = ['docs-generate-rst', 'docs-refmanual', 'docs-generate']

# =============================================
# ================== BUILD ====================
# =============================================
[feature.build.dependencies]
build = "*"
conda-build = "*"

[feature.build.tasks]
build-conda = 'bash scripts/conda/build.sh'
build-pip = 'python -m build .'

# =============================================
# =================== lint ====================
# =============================================
[feature.lint.dependencies]
pre-commit = "*"

[feature.lint.tasks]
lint = 'pre-commit run --all-files'
lint-install = 'pre-commit install'
